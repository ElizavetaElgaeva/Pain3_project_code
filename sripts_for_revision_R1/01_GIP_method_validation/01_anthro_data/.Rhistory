new_pca=new_pca[ind,]
table(new_pca[,1]==rownames(x))
new_pca=new_pca[,-c(1,2)]
ids=new_pca
ids=as.matrix(ids)
Nsnps=ncol(x)
for (i in 1:Nsnps){
l=lm(x[,i]~ids)
x[,i]=l$residuals
}
sdd=apply(x,MAR=2,sd)
x_scaled=apply(x,MAR=2,function(y){y/sd(y)})
toA=x_scaled
toA=x_scaled
l=princomp(toA)
plot(l$scores[,c(1,2)])
table(l1%in%colnames(x))
l1[!(l1%in%colnames(x))]
plot(l$scores[,c(1,2)])
plot(l$scores[,c(2,3)])
plot(l$scores[,c(1,2)])
x=fread("Desktop/snps_combined_1e-5.txt",header=T,sep="\t",data.table=F)
rownames(x)=x[,1]
x=x[,-1]
frqs=fread("Desktop/full_1e-5.txt",data.table=F)
ind=which(frqs$freq>=0.05 & frqs$freq<=0.95)
snps_x=colnames(x)
snps_x=gsub(snps_x,pattern = "_A",replacement = "")
snps_x=gsub(snps_x,pattern = "_C",replacement = "")
snps_x=gsub(snps_x,pattern = "_G",replacement = "")
snps_x=gsub(snps_x,pattern = "_T",replacement = "")
x=x[,c(1,which(snps_x%in%frqs[ind,"SNP"]))]
x=x[colnames(x)%in%l1[!(l1%in%colnames(x))],]
x
l1
library(data.table)
x=fread("Desktop/snps_combined_1e-5.txt",header=T,sep="\t",data.table=F)
rownames(x)=x[,1]
x=x[,-1]
frqs=fread("Desktop/full_1e-5.txt",data.table=F)
ind=which(frqs$freq>=0.05 & frqs$freq<=0.95)
snps_x=colnames(x)
snps_x=gsub(snps_x,pattern = "_A",replacement = "")
snps_x=gsub(snps_x,pattern = "_C",replacement = "")
snps_x=gsub(snps_x,pattern = "_G",replacement = "")
snps_x=gsub(snps_x,pattern = "_T",replacement = "")
x=x[,c(1,which(snps_x%in%frqs[ind,"SNP"]))]
x=x[,colnames(x)%in%c("rs13135092_G","rs16934888_G","rs11058142_A")]
ids=new_pca
ids=as.matrix(ids)
Nsnps=ncol(x)
for (i in 1:Nsnps){
l=lm(x[,i]~ids)
x[,i]=l$residuals
}
sdd=apply(x,MAR=2,sd)
x_scaled=apply(x,MAR=2,function(y){y/sd(y)})
toA=x_scaled
toA=x_scaled
l=princomp(toA)
plot(l$scores[,c(1,2)])
library(data.table)
x=fread("Desktop/02_PRS_bp_cases.txt",data.table=F)
rownames(x)=x[,1]
x=x[,-1]
x_scaled=apply(x,MAR=2,function(y){y/sd(y)})
toA=x_scaled
l=princomp(toA[,10:17])
plot(l$scores[,c(1,2)])
l=princomp(toA)
plot(l$scores[,c(1,2)])
tmp=dist(toA)
tmp2=cmdscale(tmp,k = 2)
tmp=dist(toA[1:20000,])
tmp2=cmdscale(tmp,k = 2)
tmp=dist(toA[1:10000,])
tmp2=cmdscale(tmp,k = 2)
plot(tmp2)
l=princomp(toA)[1:10000,]
l=princomp(toA)[1:10000,]
l=princomp(toA[1:10000,])
plot(l$scores[,c(1,2)])
plot(tmp2)
x=rnorm(1000)
x=rnorm(1000)
y1=x1*0.1+rnorm(1000)
y2=x1*0.01+rnorm(1000)
x1=rnorm(1000)
y1=x1*0.1+rnorm(1000)
y2=x1*0.01+rnorm(1000)
cor(y1,y2)
summary(lm(y1~x1))
summary(lm(y2~x1))
summary(lm(y2~x1))$coef
summary(lm(y2~x1))$coef[2,3]
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z1
z2
zz=summary(lm(I(y2+y1)~x1))$coef[2,3]
zz
summary(lm(I(y2+y1)~x1))
cor(cbind(y1,y2))
cc=cor(cbind(y1,y2))
cc
solve(cc)
z1%o%solve(cc)%o%z2
z1*solve(cc)*z2
c(z1,z2)%o%solve(cc)
c(z1,z2)%*%solve(cc)
sum(c(z1,z2)%*%solve(cc))
zz
sum(c(z1,z2)%*%cc)
sum(cc*c(zq,z2))
sum(cc*c(z1,z2))
sum(cc%*%c(z1,z2))
sum(solve(cc)%*%c(z1,z2))
zz
c(z1,z2)%*%cc%*%c(z1,z2)
c(z1,z2)%*%solve(cc)%*%c(z1,z2)
c(1,1)%o%cc
c(1,1)%o%c(1,1)
c(1,1)%o%c(1,1)*cc
su,(c(1,1)%o%c(1,1)*cc)
sum(c(1,1)%o%c(1,1)*cc)
var(y1)
y1=scale(y1)
y2=scale(y2)
cor(y1,y2)
var(y1+y2)
z1*1/sqrt(vary)+z2/sqrt(vary)
vary=sum(c(1,1)%o%c(1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)
zz
y3=x1*0.2+rnorm(1000)
x1=rnorm(1000)
y1=x1*0.1+rnorm(1000)
y2=x1*0.01+rnorm(1000)
y3=x1*0.2+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
x1=rnorm(1000)
y1=x1*0.1+rnorm(1000)
y2=x1*0.01+rnorm(1000)
y3=x1*0.2+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z3=summary(lm(y3~x1))$coef[2,3]
zz=summary(lm(I(y2+y1+y3)~x1))$coef[2,3]
cc=cor(cbind(y1,y2,y3))
vary=sum(c(1,1,1)%o%c(1,1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)+z3/sqrt(vary)
zz
x1=rnorm(1000)
y1=x1*0.9+rnorm(1000)
y2=x1*0.9+rnorm(1000)
y3=x1*0.9+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z3=summary(lm(y3~x1))$coef[2,3]
zz=summary(lm(I(y2+y1+y3)~x1))$coef[2,3]
cc=cor(cbind(y1,y2,y3))
vary=sum(c(1,1,1)%o%c(1,1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)+z3/sqrt(vary)
zz
35^2
vary
x1=rnorm(1000)
y1=x1*0.9+rnorm(1000)
y2=x1*0.9+rnorm(1000)
y3=x1*0.9+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z3=summary(lm(y3~x1))$coef[2,3]
zz=summary(lm(I(y2+y1+y3)~x1))$coef[2,3]
cc=cor(cbind(y1,y2,y3))
vary=sum(c(1,1,1)%o%c(1,1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)+z3/sqrt(vary)
zz
x1=rnorm(1000)
y1=x1*0.9+rnorm(1000)
y2=x1*0.9+rnorm(1000)
y3=x1*0.9+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z3=summary(lm(y3~x1))$coef[2,3]
zz=summary(lm(I(y2+y1+y3)~x1))$coef[2,3]
cc=cor(cbind(y1,y2,y3))
vary=sum(c(1,1,1)%o%c(1,1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)+z3/sqrt(vary)
zz
x1=rnorm(1000)
y1=x1*0.5+rnorm(1000)
y2=x1*0.5+rnorm(1000)
y3=x1*0.5+rnorm(1000)
z1=summary(lm(y1~x1))$coef[2,3]
z2=summary(lm(y2~x1))$coef[2,3]
z3=summary(lm(y3~x1))$coef[2,3]
zz=summary(lm(I(y2+y1+y3)~x1))$coef[2,3]
cc=cor(cbind(y1,y2,y3))
vary=sum(c(1,1,1)%o%c(1,1,1)*cc)
z1*1/sqrt(vary)+z2/sqrt(vary)+z3/sqrt(vary)
zz
library(TwoSampleMR)
ao <- available_outcomes()
ao <- available_outcomes()
exposure_dat <- read_exposure_data(
filename = 'Desctop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
phenotype_col = '',
units_col = '',
other_allele_col = '',
eaf_col = '',
samplesize_col = 'N',
ncase_col = '',
ncontrol_col = '',
gene_col = '',
pval_col = 'p'
)
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
phenotype_col = '',
units_col = '',
other_allele_col = '',
eaf_col = '',
samplesize_col = 'N',
ncase_col = '',
ncontrol_col = '',
gene_col = '',
pval_col = 'p'
)
exposure_dat
x=read.table("Desktop/LDD_1e-6.txt")
x
x=read.table("Desktop/LDD_1e-6.txt",header=T)
x
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
phenotype_col = '',
units_col = '',
other_allele_col = '',
eaf_col = '',
samplesize_col = 'N',
ncase_col = '',
ncontrol_col = '',
gene_col = '',
pval_col = 'p'
)
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
phenotype_col = '',
units_col = '',
other_allele_col = 'Oth',
eaf_col = '',
samplesize_col = 'N',
ncase_col = '',
ncontrol_col = '',
gene_col = '',
pval_col = 'p'
)
exposure_dat
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
other_allele_col = 'Oth',
samplesize_col = 'N',
pval_col = 'p'
)
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
other_allele_col = 'Oth',
samplesize_col = 'N',
pval_col = 'p'
)
exposure_dat
outcome_dat <- read_outcome_data(
filename = 'Desktop/CBP_out.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
phenotype_col = '',
units_col = '',
other_allele_col = '',
eaf_col = '',
samplesize_col = 'N',
ncase_col = '',
ncontrol_col = '',
gene_col = '',
pval_col = 'p'
)
outcome_dat <- read_outcome_data(
filename = 'Desktop/CBP_out.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'BETA',
se_col = 'SE',
effect_allele_col = 'ALLELE1',
other_allele_col = 'ALLELE0',
pval_col = 'P_BOLT_LMM_INF'
)
outcome_dat
dat <- harmonise_data(exposure_dat, outcome_dat, action = 1)
dat
mr_results <- mr(dat)
mr_results
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
other_allele_col = 'Oth',
samplesize_col = 'N',
pval_col = 'p'
)
outcome_dat <- read_outcome_data(
filename = 'Desktop/CBP_out.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'BETA',
se_col = 'SE',
effect_allele_col = 'ALLELE1',
other_allele_col = 'ALLELE0',
pval_col = 'P_BOLT_LMM_INF'
)
dat <- harmonise_data(exposure_dat, outcome_dat, action = 1)
mr_results <- mr(dat)
mr_results
exposure_dat <- read_exposure_data(
filename = 'Desktop/LDD_1e-6.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'beta',
se_col = 'se',
effect_allele_col = 'Eff',
other_allele_col = 'Oth',
samplesize_col = 'N',
pval_col = 'p'
)
outcome_dat <- read_outcome_data(
filename = 'Desktop/CBP_out.txt',
sep = '\t',
snp_col = 'SNP',
beta_col = 'BETA',
se_col = 'SE',
effect_allele_col = 'ALLELE1',
other_allele_col = 'ALLELE0',
pval_col = 'P_BOLT_LMM_INF'
)
dat <- harmonise_data(exposure_dat, outcome_dat, action = 1)
mr_results <- mr(dat)
mr_results
dat
x=matrix(nrow=2,c(1,1,0,1))
x
t(x)
t(x)+x
se=matrix(nrow=2,c(1,1,1,1)/2)
se
n=nrow(se)
out=array(NA,c(n,n))
for (i in 1:(n)){
j=i
for (j in (i):n){
out[i,j]=rnorm(1,mean=0,sd=se[i,j])
}
}
out
out[lower.tri(out)]=0
out
out_1=t(out)
out=out+out_1
out
rep(0,4
)
#setwd("/mnt/Disk_D/DB_ux/Dropbox/MV_PAIN/results/20180928/data/")
#setwd("C:/Users/ND/Dropbox/MV_PAIN/results/20181010/data")
#setwd("Dropbox/MV_PAIN/results/20181010/data")
setwd("~/Dropbox/Dropbox/MV_PAIN/results/20200115/01_anthro_data/")
source("~/Dropbox/Dropbox/MV_PAIN/results/20200115/20200115_function.R")
#setwd("/mnt/Disk_D/DB_ux/Dropbox/MV_PAIN/results/20180928/data/")
#setwd("C:/Users/ND/Dropbox/MV_PAIN/results/20181010/data")
#setwd("Dropbox/MV_PAIN/results/20181010/data")
setwd("~/Dropbox/Dropbox/MV_PAIN/results/20200115/02_indep_traits_data/")
source("~/Dropbox/Dropbox/MV_PAIN/results/20200115/20200115_function.R")
covm<-read.table('pheno_corr_matrix.txt', row.names=1,  check.names=F)
gcovm<-read.table('gene_cov_matrix.txt', row.names=1,  check.names=F)
nms=c("BMI","Weight","HIP","WC")
covm
nms=c("HBMD","VV","HDS","TL_VLDL")
names(nms)=c(4128,4041,1112,377)
phe=as.matrix(covm)
rgs_cov=as.matrix(gcovm)
colnames(rgs_cov)=rownames(rgs_cov)=colnames(phe)=rownames(phe)=nms
four_pains=add_gpc(gcovm=as.matrix(rgs_cov),phem=as.matrix(phe),l=0)
out=four_pains
out_rg=out$cor_g
diag(out_rg)=out$H2
library(corrplot)
toPlot=out_rg
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
toPlot=four_pains$cov_y
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
library(dplyr)
library(ggplot2)
library(tidyr)
dta=out$cor_g[(nrow(out$cor_g)/2+1):nrow(out$cor_g),1:(nrow(out$cor_g)/2)]
dta=dta^2
dta=cbind(dta,GPC=rownames(dta))
dta=as.data.frame(dta)
dta[,1:(nrow(out$cor_g)/2)]=apply(dta[,1:(nrow(out$cor_g)/2)],MAR=2,as.numeric)
dta=dta %>% gather(Trait, r2,-GPC)
#pdf("tmp2.pdf",width = 7,height = 7)
dta %>%
ggplot(aes(x = Trait, y = r2, fill = GPC)) +
labs(title="Genetic variance explained by GPC in pain traits",
x ="Pain type", y = "Genetic variance explained") +
scale_fill_brewer(palette="Paired") +
geom_bar(stat = "identity", position = "stack") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
dta=out$eigens
colnames(dta)=paste0("GPC",1:4)
rownames(dta)=colnames(out$cov_g)[1:4]
dta=cbind(dta,Trait=rownames(dta))
dta=as.data.frame(dta)
dta[,1:4]=apply(dta[,1:4],MAR=2,as.numeric)
dta=dta %>% gather(GPC, a,-Trait)
dta$GPC=as.factor(dta$GPC)
dta$GPC=factor(dta$GPC,levels(dta$GPC)[4:1])
### Brplots ploting
library(ggplot2)
dodge <- position_dodge(width = 1)
l=ggplot(dta, aes(x=GPC, y=a,fill=Trait))+
geom_bar(stat="identity",position = position_dodge()) +
xlab("GPC") +
ylab("Input of each pain trait into GPC") +
coord_flip()+
scale_fill_brewer(palette="Spectral")+
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
#pdf("tmp3.pdf",width = 7,height = 7)
l
#setwd("/mnt/Disk_D/DB_ux/Dropbox/MV_PAIN/results/20180928/data/")
#setwd("C:/Users/ND/Dropbox/MV_PAIN/results/20181010/data")
#setwd("Dropbox/MV_PAIN/results/20181010/data")
setwd("~/Dropbox/Dropbox/MV_PAIN/results/20200115/01_anthro_data/")
source("~/Dropbox/Dropbox/MV_PAIN/results/20200115/20200115_function.R")
covm<-read.table('pheno_corr_matrix.txt', row.names=1,  check.names=F)
gcovm<-read.table('gene_cov_matrix.txt', row.names=1,  check.names=F)
gcovm_se<-read.table('gene_cov_se_matrix.txt', row.names=1,  check.names=F)
nms=c("BMI","Weight","HIP","WC")
names(nms)=c(4049,4050,4058,4179)
phe=as.matrix(covm)
rgs_cov=as.matrix(gcovm)
colnames(rgs_cov)=rownames(rgs_cov)=colnames(phe)=rownames(phe)=nms
covm<-read.table('pheno_corr_matrix_5_traits.txt', row.names=1,  check.names=F)
gcovm<-read.table('gene_cov_matrix_5_traits.txt', row.names=1,  check.names=F)
phe=as.matrix(covm)
rgs_cov=as.matrix(gcovm)
nms=c("BMI","Weight","HIP","Height","WC")
names(nms)=c(4049,4050,4058,4059,4179)
colnames(rgs_cov)=rownames(rgs_cov)=colnames(phe)=rownames(phe)=nms
out=add_gpc(gcovm=as.matrix(rgs_cov),phem=as.matrix(phe),l=0)
out_rg=out$cor_g
diag(out_rg)=out$H2
library(corrplot)
toPlot=out_rg
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
toPlot=four_pains$cov_y
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
toPlot=out$cov_y
corrplot(corr = toPlot,method = "square",
tl.col="black",p.mat = toPlot,insig = "p-value", sig.level = -1,tl.srt = 75)
